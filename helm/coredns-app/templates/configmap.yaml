apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
data:
  Corefile: |
    .:{{ .Values.ports.dns.targetPort }} {
        {{- if not (contains "cache" .Values.configmap.custom) }}
        cache {{ .Values.configmap.cache }}
        {{- end }}
        errors
        template ANY AAAA {
          rcode NOERROR
        }
        health {
          lameduck 5s
        }
        ready
        log . {
          {{- range (.Values.configmap.log | trimAll "\n " |  split "\n") }}
          class {{ . }}
          {{- end }}
        }
        loadbalance {{ .Values.loadbalancePolicy }}
        prometheus :{{ .Values.ports.prometheus }}

        {{- if and .Values.configmap.forward .Values.configmap.forwardOptions }}
        forward {{- range (.Values.configmap.forward | trimAll "\n " | splitList "\n") }} {{ . }} {{- end }} {
          {{ .Values.configmap.forwardOptions | trimSuffix "\n" }}
        }
        {{- else if .Values.configmap.forward }}
        forward {{- range (.Values.configmap.forward | trimAll "\n " | splitList "\n") }} {{ . }} {{- end }}
        {{- else }}
        forward . /etc/resolv.conf
        {{- end }}
        reload
        {{- if .Values.configmap.autopath }}
        autopath {{ .Values.configmap.autopath }}
        {{- end }}
    }

    {{- $domains := split " " .Values.cluster.kubernetes.clusterDomain }}
    {{- $dnsPort := .Values.ports.dns.targetPort }}
    {{- $clusterIPRange := .Values.cluster.kubernetes.API.clusterIPRange }}
    {{- $calicoCIDR:= .Values.cluster.calico.CIDR }}
    {{- $loadbalancePolicy := .Values.loadbalancePolicy }}
    {{- $prometheus := .Values.ports.prometheus }}
    {{- $customLog := .Values.configmap.log }}
    {{- $additionalLocalZones := .Values.additionalLocalZones -}}
    {{- range $index, $domain := $domains }}
    {{- if not (has $domain $additionalLocalZones) }}
    {{ $domain }}:{{ $dnsPort }} {{- if (regexMatch ".local$" $domain ) }} {{ $clusterIPRange }}:{{ $dnsPort }} {{ $calicoCIDR }}:{{ $dnsPort }} {{- end }} {
        errors
        template ANY AAAA {
          rcode NOERROR
        }
        health {
          lameduck 5s
        }
        ready
        kubernetes {{ $domain }} {{- if (regexMatch ".local$" $domain ) }} {{ $clusterIPRange }} {{ $calicoCIDR }} {{- end }} {
          fallthrough in-addr.arpa ip6.arpa
          pods verified
        }
        log . {
          {{- range ($customLog | trimAll "\n " |  split "\n") }}
          class {{ . }}
          {{- end }}
        }
        loadbalance {{ $loadbalancePolicy }}
        prometheus :{{ $prometheus }}
        reload
    }
    {{- end }}
    {{- end }}

    {{- if .Values.additionalLocalZones }}
    {{- range $index, $domain := .Values.additionalLocalZones }}
    {{- if not (eq $domain "") }}
    {{ $domain }}:{{ $dnsPort }} {
        errors
        template ANY AAAA {
          rcode NOERROR
        }
        health {
          lameduck 5s
        }
        ready
        kubernetes {{ $domain }} {
          fallthrough in-addr.arpa ip6.arpa
          pods verified
        }
        log . {
          {{- range ($customLog | trimAll "\n " |  split "\n") }}
          class {{ . }}
          {{- end }}
        }
        loadbalance {{ $loadbalancePolicy }}
        prometheus :{{ $prometheus }}
        reload
    }
    {{- end }}
    {{- end }}
    {{- end }}

    {{- include "cloudprovider.zones" . |nindent 4 }}

    {{- if .Values.configmap.custom }}
    {{- range (.Values.configmap.custom | trimAll "\n " |  splitList "\n") }}
    {{ . }}
    {{- end }}
    {{- end }}
